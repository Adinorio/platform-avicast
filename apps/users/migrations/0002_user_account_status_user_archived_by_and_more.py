# Generated by Django 4.2.23 on 2025-08-20 14:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("fauna", "0001_initial"),
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="user",
            name="account_status",
            field=models.CharField(
                choices=[("ACTIVE", "Active"), ("DISABLED", "Disabled"), ("ARCHIVED", "Archived")],
                default="ACTIVE",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="archived_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="archived_users",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="archived_date",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="is_archived",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="user",
            name="last_activity",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="login_count",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="user",
            name="password_change_required",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="user",
            name="password_changed",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="user",
            name="password_changed_date",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name="UserActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("LOGIN", "Login"),
                            ("LOGOUT", "Logout"),
                            ("PASSWORD_CHANGE", "Password Change"),
                            ("USER_CREATED", "User Created"),
                            ("USER_UPDATED", "User Updated"),
                            ("USER_ARCHIVED", "User Archived"),
                            ("USER_DISABLED", "User Disabled"),
                            ("SPECIES_ADDED", "Species Added"),
                            ("SPECIES_UPDATED", "Species Updated"),
                            ("SPECIES_ARCHIVED", "Species Archived"),
                            ("SITE_ADDED", "Site Added"),
                            ("SITE_UPDATED", "Site Updated"),
                            ("CENSUS_ADDED", "Census Added"),
                            ("CENSUS_UPDATED", "Census Updated"),
                            ("IMAGE_PROCESSED", "Image Processed"),
                            ("REPORT_GENERATED", "Report Generated"),
                            ("DATA_IMPORTED", "Data Imported"),
                            ("DATA_EXPORTED", "Data Exported"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField()),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("INFO", "Information"),
                            ("WARNING", "Warning"),
                            ("ERROR", "Error"),
                            ("CRITICAL", "Critical"),
                        ],
                        default="INFO",
                        max_length=20,
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Activity",
                "verbose_name_plural": "User Activities",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "activity_type", "timestamp"],
                        name="users_usera_user_id_7ed4ab_idx",
                    ),
                    models.Index(
                        fields=["activity_type", "timestamp"], name="users_usera_activit_bdf1f0_idx"
                    ),
                    models.Index(
                        fields=["severity", "timestamp"], name="users_usera_severit_4b9f79_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="DataRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "request_type",
                    models.CharField(
                        choices=[
                            ("SPECIES_ADD", "Add Species"),
                            ("SPECIES_UPDATE", "Update Species"),
                            ("SITE_ADD", "Add Site"),
                            ("SITE_UPDATE", "Update Site"),
                            ("CENSUS_ADD", "Add Census"),
                            ("CENSUS_UPDATE", "Update Census"),
                            ("DATA_IMPORT", "Import Data"),
                            ("REPORT_REQUEST", "Report Request"),
                        ],
                        max_length=50,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("URGENT", "Urgent"),
                        ],
                        default="MEDIUM",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("requested_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("request_data", models.JSONField(blank=True, default=dict)),
                ("admin_notes", models.TextField(blank=True)),
                ("field_worker_notes", models.TextField(blank=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="requests_approved",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                # (
                #     "related_site",
                #     models.ForeignKey(
                #         blank=True,
                #         null=True,
                #         on_delete=django.db.models.deletion.SET_NULL,
                #         to="locations.site",
                #     ),
                # ),
                (
                    "related_species",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="fauna.species",
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requests_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Data Request",
                "verbose_name_plural": "Data Requests",
                "ordering": ["-requested_at"],
                "indexes": [
                    models.Index(
                        fields=["requested_by", "status", "requested_at"],
                        name="users_datar_request_b1e707_idx",
                    ),
                    models.Index(
                        fields=["status", "priority", "requested_at"],
                        name="users_datar_status_16e2cc_idx",
                    ),
                    models.Index(
                        fields=["request_type", "status"], name="users_datar_request_f9a861_idx"
                    ),
                ],
            },
        ),
    ]
