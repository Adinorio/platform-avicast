# Generated by Django 5.0.1

from django.db import migrations


def populate_bird_families(apps, schema_editor):
    """Populate BirdFamily table with the 7 active families"""
    BirdFamily = apps.get_model('fauna', 'BirdFamily')
    
    families = [
        {
            'name': 'HERONS AND EGRETS',
            'display_name': 'Herons and Egrets',
            'category': 'WATER_BIRDS',
            'description': 'Long-legged wading birds including herons, egrets, and bitterns',
            'scientific_name': 'Ardeidae',
            'is_active': True
        },
        {
            'name': 'GEESE & DUCKS',
            'display_name': 'Geese & Ducks',
            'category': 'WATER_BIRDS',
            'description': 'Waterfowl including ducks, geese, and swans',
            'scientific_name': 'Anatidae',
            'is_active': True
        },
        {
            'name': 'IBISES & SPOONBILLS',
            'display_name': 'Ibises & Spoonbills',
            'category': 'WATER_BIRDS',
            'description': 'Long-legged wading birds with distinctive bills',
            'scientific_name': 'Threskiornithidae',
            'is_active': True
        },
        {
            'name': 'SHOREBIRDS-WADERS',
            'display_name': 'Shorebirds-Waders',
            'category': 'WATER_BIRDS',
            'description': 'Birds that forage along shorelines and in wetlands',
            'scientific_name': 'Charadriiformes',
            'is_active': True
        },
        {
            'name': 'RAILS, GALLINULES & COOTS',
            'display_name': 'Rails, Gallinules & Coots',
            'category': 'WATER_BIRDS',
            'description': 'Marsh and wetland birds with short wings and long legs',
            'scientific_name': 'Rallidae',
            'is_active': True
        },
        {
            'name': 'GULLS, TERNS & SKIMMERRS',
            'display_name': 'Gulls, Terns & Skimmers',
            'category': 'WATER_BIRDS',
            'description': 'Seabirds and coastal birds with webbed feet',
            'scientific_name': 'Laridae',
            'is_active': True
        },
        {
            'name': 'ADDITIONAL SPECIES',
            'display_name': 'Additional Species',
            'category': 'OTHER',
            'description': 'Miscellaneous species that don\'t fit into other categories',
            'scientific_name': '',
            'is_active': True
        }
    ]
    
    for family_data in families:
        BirdFamily.objects.get_or_create(
            name=family_data['name'],
            defaults=family_data
        )


def reverse_populate_bird_families(apps, schema_editor):
    """Reverse migration - remove all BirdFamily records"""
    BirdFamily = apps.get_model('fauna', 'BirdFamily')
    BirdFamily.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('fauna', '0008_create_birdfamily_model'),
    ]

    operations = [
        migrations.RunPython(
            populate_bird_families,
            reverse_populate_bird_families
        ),
    ]
