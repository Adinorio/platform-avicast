# Generated by Django 5.0.1 on 2025-10-10 13:27

import apps.locations.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('fauna', '0002_add_optimized_images'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CensusMonth',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('month', models.PositiveIntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')])),
                ('total_census_count', models.PositiveIntegerField(default=0, help_text='Total census records for this month')),
                ('total_birds_recorded', models.PositiveIntegerField(default=0, help_text='Total birds recorded this month')),
                ('total_species_recorded', models.PositiveIntegerField(default=0, help_text='Total species recorded this month')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Census Month',
                'verbose_name_plural': 'Census Months',
                'ordering': ['month'],
            },
        ),
        migrations.CreateModel(
            name='CensusYear',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('year', models.PositiveIntegerField()),
                ('total_census_count', models.PositiveIntegerField(default=0, help_text='Total census records for this year')),
                ('total_birds_recorded', models.PositiveIntegerField(default=0, help_text='Total birds recorded this year')),
                ('total_species_recorded', models.PositiveIntegerField(default=0, help_text='Total species recorded this year')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Census Year',
                'verbose_name_plural': 'Census Years',
                'ordering': ['-year'],
            },
        ),
        migrations.CreateModel(
            name='Census',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('census_date', models.DateField(help_text='Date when census was conducted')),
                ('weather_conditions', models.CharField(blank=True, help_text='Weather conditions during census', max_length=200)),
                ('notes', models.TextField(blank=True, help_text='General census notes')),
                ('total_birds', models.PositiveIntegerField(default=0, help_text='Total birds observed')),
                ('total_species', models.PositiveIntegerField(default=0, help_text='Total species observed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('field_team', models.ManyToManyField(blank=True, help_text='All personnel who participated in the fieldwork', related_name='census_team', to=settings.AUTH_USER_MODEL)),
                ('lead_observer', models.ForeignKey(blank=True, help_text='Primary observer who led the fieldwork', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lead_census', to=settings.AUTH_USER_MODEL)),
                ('month', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='census_records', to='locations.censusmonth')),
            ],
            options={
                'verbose_name': 'Census',
                'verbose_name_plural': 'Census Records',
                'ordering': ['-census_date'],
                'unique_together': {('month', 'census_date')},
            },
        ),
        migrations.CreateModel(
            name='CensusObservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('species_name', models.CharField(help_text='Common or scientific name', max_length=200)),
                ('count', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('behavior_notes', models.TextField(blank=True, help_text='Behavior, age, sex, etc.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('census', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observations', to='locations.census')),
                ('species', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='census_observations', to='fauna.species')),
            ],
            options={
                'verbose_name': 'Census Observation',
                'verbose_name_plural': 'Census Observations',
                'ordering': ['species_name'],
            },
        ),
        migrations.AddField(
            model_name='censusmonth',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='census_months', to='locations.censusyear'),
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('optimized_image', models.ImageField(blank=True, help_text='Web-optimized version for fast delivery', null=True, upload_to='optimized/')),
                ('thumbnail', models.ImageField(blank=True, help_text='Thumbnail version for previews', null=True, upload_to='thumbnails/')),
                ('ai_processed_image', models.ImageField(blank=True, help_text='AI-optimized version for processing', null=True, upload_to='ai_processed/')),
                ('optimization_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', help_text='Status of image optimization', max_length=20)),
                ('original_size', models.BigIntegerField(blank=True, help_text='Original image file size in bytes', null=True)),
                ('optimized_size', models.BigIntegerField(blank=True, help_text='Optimized image file size in bytes', null=True)),
                ('thumbnail_size', models.BigIntegerField(blank=True, help_text='Thumbnail file size in bytes', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('site_type', models.CharField(choices=[('wetland', 'Wetland'), ('forest', 'Forest'), ('grassland', 'Grassland'), ('urban', 'Urban'), ('coastal', 'Coastal'), ('mountain', 'Mountain'), ('other', 'Other')], default='other', max_length=20)),
                ('coordinates', models.CharField(blank=True, help_text='Latitude, Longitude', max_length=100)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, help_text='Site image for card display', null=True, upload_to=apps.locations.models.site_image_upload_path)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('monitoring', 'Under Monitoring'), ('restricted', 'Restricted Access')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Site',
                'verbose_name_plural': 'Sites',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='censusyear',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='census_years', to='locations.site'),
        ),
        migrations.AlterUniqueTogether(
            name='censusmonth',
            unique_together={('year', 'month')},
        ),
        migrations.AlterUniqueTogether(
            name='censusyear',
            unique_together={('site', 'year')},
        ),
    ]
