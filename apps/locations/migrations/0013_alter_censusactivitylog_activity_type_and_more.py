# Generated by Django 5.0.1 on 2025-10-08 01:52

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('locations', '0012_censusactivitylog'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='censusactivitylog',
            name='activity_type',
            field=models.CharField(choices=[('create', 'Created'), ('update', 'Updated'), ('delete', 'Deleted'), ('archive', 'Archived'), ('restore', 'Restored'), ('import', 'Imported'), ('bulk_import', 'Bulk Imported'), ('verify', 'Verified'), ('batch_edit', 'Batch Edited'), ('export', 'Exported')], max_length=20),
        ),
        migrations.CreateModel(
            name='BulkCensusImport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(help_text='Uploaded Excel/CSV file', upload_to='bulk_census_imports/')),
                ('file_type', models.CharField(choices=[('excel', 'Excel File'), ('csv', 'CSV File')], max_length=20)),
                ('original_filename', models.CharField(max_length=255)),
                ('total_rows', models.PositiveIntegerField(default=0, help_text='Total rows in the file')),
                ('valid_rows', models.PositiveIntegerField(default=0, help_text='Rows that passed validation')),
                ('invalid_rows', models.PositiveIntegerField(default=0, help_text='Rows that failed validation')),
                ('imported_records', models.PositiveIntegerField(default=0, help_text='Successfully imported census records')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('validating', 'Validating Data'), ('validation_failed', 'Validation Failed'), ('ready', 'Ready for Import'), ('importing', 'Importing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('error_summary', models.JSONField(default=dict, help_text='Summary of validation errors')),
                ('validation_errors', models.JSONField(default=list, help_text='Detailed validation errors')),
                ('import_preview', models.JSONField(default=list, help_text='Preview of data to be imported')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('site_column', models.CharField(blank=True, help_text='Column name for site identification', max_length=50)),
                ('species_column', models.CharField(blank=True, help_text='Column name for species identification', max_length=50)),
                ('count_column', models.CharField(blank=True, help_text='Column name for bird counts', max_length=50)),
                ('date_column', models.CharField(blank=True, help_text='Column name for observation dates', max_length=50)),
                ('notes_column', models.CharField(blank=True, help_text='Column name for observation notes', max_length=50)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_bulk_imports', to=settings.AUTH_USER_MODEL)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulk_imports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bulk Census Import',
                'verbose_name_plural': 'Bulk Census Imports',
                'ordering': ['-uploaded_at'],
                'indexes': [models.Index(fields=['status', 'uploaded_at'], name='locations_b_status_d165f8_idx'), models.Index(fields=['uploaded_by', 'status'], name='locations_b_uploade_da7f9d_idx')],
            },
        ),
    ]
