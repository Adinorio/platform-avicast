# Generated by Django 5.0.1 on 2025-10-03 14:25

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ImageUpload',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Brief description of the image', max_length=200)),
                ('image_file', models.ImageField(help_text='Upload bird image for egret species identification', upload_to='egret_images/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('original_filename', models.CharField(max_length=255)),
                ('upload_status', models.CharField(choices=[('CAPTURED', 'Captured'), ('CLARIFIED', 'Clarified'), ('ORGANIZED', 'Organized'), ('REFLECTED', 'Reflected'), ('ENGAGED', 'Engaged')], default='CAPTURED', max_length=20)),
                ('processing_started_at', models.DateTimeField(blank=True, null=True)),
                ('processing_completed_at', models.DateTimeField(blank=True, null=True)),
                ('site_hint', models.CharField(blank=True, help_text='Optional site location hint for easier allocation', max_length=200)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_images', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Image Upload',
                'verbose_name_plural': 'Image Uploads',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingBatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Batch name/description', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('total_images', models.PositiveIntegerField(default=0)),
                ('processed_images', models.PositiveIntegerField(default=0)),
                ('failed_images', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('QUEUED', 'Queued'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='QUEUED', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_batches', to=settings.AUTH_USER_MODEL)),
                ('images', models.ManyToManyField(related_name='processing_batches', to='image_processing.imageupload')),
            ],
            options={
                'verbose_name': 'Processing Batch',
                'verbose_name_plural': 'Processing Batches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('detected_species', models.CharField(choices=[('CHINESE_EGRET', 'Chinese Egret'), ('GREAT_EGRET', 'Great Egret'), ('INTERMEDIATE_EGRET', 'Intermediate Egret'), ('LITTLE_EGRET', 'Little Egret'), ('CATTLE_EGRET', 'Cattle Egret'), ('PACIFIC_REEF_HERON', 'Pacific Reef Heron')], help_text='AI-identified egret species', max_length=50)),
                ('confidence_score', models.DecimalField(decimal_places=4, help_text='AI confidence score (0.0 to 1.0)', max_digits=5)),
                ('bounding_box', models.JSONField(help_text='Bounding box coordinates for detected bird')),
                ('total_detections', models.PositiveIntegerField(default=1, help_text='Number of birds detected in image')),
                ('ai_model_used', models.CharField(default='YOLOv8_Egret_Specialist', max_length=100)),
                ('processing_device', models.CharField(default='cpu', max_length=20)),
                ('inference_time', models.DecimalField(blank=True, decimal_places=3, help_text='AI inference time in seconds', max_digits=6, null=True)),
                ('review_decision', models.CharField(choices=[('PENDING', 'Pending Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('OVERRIDDEN', 'Overridden')], default='PENDING', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('is_overridden', models.BooleanField(default=False)),
                ('overridden_species', models.CharField(blank=True, choices=[('CHINESE_EGRET', 'Chinese Egret'), ('GREAT_EGRET', 'Great Egret'), ('INTERMEDIATE_EGRET', 'Intermediate Egret'), ('LITTLE_EGRET', 'Little Egret'), ('CATTLE_EGRET', 'Cattle Egret'), ('PACIFIC_REEF_HERON', 'Pacific Reef Heron')], max_length=50, null=True)),
                ('overridden_count', models.PositiveIntegerField(blank=True, null=True)),
                ('override_reason', models.TextField(blank=True)),
                ('allocated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                # ('allocated_to_census', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allocated_images', to='locations.censusobservation')),
                # ('allocated_to_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allocated_images', to='locations.site')),
                ('image_upload', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='processing_result', to='image_processing.imageupload')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_images', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Processing Result',
                'verbose_name_plural': 'Processing Results',
                'ordering': ['-created_at'],
            },
        ),
    ]
