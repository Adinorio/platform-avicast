# Generated by Django 5.0.1 on 2025-10-07 10:18

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BirdSpeciesAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('species', models.CharField(choices=[('CHINESE_EGRET', 'Chinese Egret'), ('GREAT_EGRET', 'Great Egret'), ('INTERMEDIATE_EGRET', 'Intermediate Egret'), ('LITTLE_EGRET', 'Little Egret'), ('CATTLE_EGRET', 'Cattle Egret'), ('PACIFIC_REEF_HERON', 'Pacific Reef Heron')], max_length=50, unique=True)),
                ('total_count', models.PositiveIntegerField(default=0, help_text='Total count across all sites')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('sites_with_presence', models.PositiveIntegerField(default=0, help_text='Number of sites where this species is present')),
                ('primary_habitats', models.JSONField(default=list, help_text='List of primary habitat types')),
                ('breeding_season_start', models.IntegerField(blank=True, help_text='Month (1-12) when breeding season starts', null=True)),
                ('breeding_season_end', models.IntegerField(blank=True, help_text='Month (1-12) when breeding season ends', null=True)),
                ('migration_pattern', models.CharField(blank=True, help_text='Migration pattern description', max_length=100)),
                ('iucn_status', models.CharField(default='LC', help_text='IUCN Red List status', max_length=20)),
                ('population_trend', models.CharField(default='STABLE', help_text='Population trend', max_length=20)),
                ('conservation_notes', models.TextField(blank=True, help_text='Conservation-related notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bird Species Analytics',
                'verbose_name_plural': 'Bird Species Analytics',
                'ordering': ['species'],
            },
        ),
        migrations.CreateModel(
            name='ReportConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('SPECIES_SUMMARY', 'Species Summary Report'), ('SITE_COMPARISON', 'Site Comparison Report'), ('POPULATION_TRENDS', 'Population Trends Report'), ('CONSERVATION_STATUS', 'Conservation Status Report'), ('MONTHLY_SUMMARY', 'Monthly Summary Report'), ('ANNUAL_REVIEW', 'Annual Review Report')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('include_species', models.JSONField(default=list, help_text='List of species to include')),
                ('include_sites', models.JSONField(default=list, help_text='List of sites to include')),
                ('date_range_start', models.DateField(blank=True, null=True)),
                ('date_range_end', models.DateField(blank=True, null=True)),
                ('output_format', models.CharField(default='HTML', help_text='HTML, PDF, EXCEL', max_length=10)),
                ('include_charts', models.BooleanField(default=True)),
                ('include_maps', models.BooleanField(default=True)),
                ('include_raw_data', models.BooleanField(default=False)),
                ('is_scheduled', models.BooleanField(default=False)),
                ('schedule_frequency', models.CharField(blank=True, help_text='DAILY, WEEKLY, MONTHLY', max_length=20)),
                ('next_generation', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Configuration',
                'verbose_name_plural': 'Report Configurations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GeneratedReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('generation_date', models.DateTimeField(auto_now_add=True)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size_bytes', models.PositiveIntegerField(blank=True, null=True)),
                ('species_included', models.JSONField(default=list)),
                ('sites_included', models.JSONField(default=list)),
                ('total_records', models.PositiveIntegerField(default=0)),
                ('date_range', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(default='GENERATING', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics_new.reportconfiguration')),
            ],
            options={
                'verbose_name': 'Generated Report',
                'verbose_name_plural': 'Generated Reports',
                'ordering': ['-generation_date'],
            },
        ),
        migrations.CreateModel(
            name='SiteAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('site_name', models.CharField(max_length=200)),
                ('site_code', models.CharField(max_length=50, unique=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('habitat_type', models.CharField(blank=True, max_length=100)),
                ('area_hectares', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_birds_recorded', models.PositiveIntegerField(default=0)),
                ('species_diversity', models.PositiveIntegerField(default=0, help_text='Number of different species recorded')),
                ('target_species_present', models.JSONField(default=list, help_text='List of target species found at this site')),
                ('dominant_species', models.CharField(blank=True, help_text='Most abundant species', max_length=50)),
                ('last_survey_date', models.DateField(blank=True, null=True)),
                ('survey_frequency_days', models.PositiveIntegerField(default=30, help_text='Days between surveys')),
                ('monitoring_status', models.CharField(default='ACTIVE', max_length=20)),
                ('average_temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('average_humidity', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('vegetation_cover_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Site Analytics',
                'verbose_name_plural': 'Site Analytics',
                'ordering': ['site_code'],
            },
        ),
        migrations.CreateModel(
            name='PopulationTrend',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('species', models.CharField(choices=[('CHINESE_EGRET', 'Chinese Egret'), ('GREAT_EGRET', 'Great Egret'), ('INTERMEDIATE_EGRET', 'Intermediate Egret'), ('LITTLE_EGRET', 'Little Egret'), ('CATTLE_EGRET', 'Cattle Egret'), ('PACIFIC_REEF_HERON', 'Pacific Reef Heron')], max_length=50)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('period_length_days', models.PositiveIntegerField()),
                ('average_count', models.DecimalField(decimal_places=2, max_digits=10)),
                ('peak_count', models.PositiveIntegerField()),
                ('minimum_count', models.PositiveIntegerField()),
                ('trend_direction', models.CharField(help_text='INCREASING, DECREASING, STABLE, FLUCTUATING', max_length=20)),
                ('trend_strength', models.CharField(help_text='STRONG, MODERATE, WEAK', max_length=20)),
                ('confidence_level', models.DecimalField(decimal_places=2, help_text='0.0 to 1.0', max_digits=5)),
                ('standard_deviation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('coefficient_variation', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('sample_size', models.PositiveIntegerField()),
                ('correlated_factors', models.JSONField(default=list, help_text='Environmental factors that correlate with population')),
                ('seasonal_pattern', models.CharField(blank=True, max_length=100)),
                ('analysis_date', models.DateTimeField(auto_now_add=True)),
                ('methodology', models.TextField(blank=True, help_text='Analysis methodology description')),
                ('analyzed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Population Trend',
                'verbose_name_plural': 'Population Trends',
                'ordering': ['-analysis_date'],
                'unique_together': {('species', 'period_start', 'period_end')},
            },
        ),
        migrations.CreateModel(
            name='CensusRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('census_date', models.DateField()),
                ('census_time', models.TimeField(blank=True, null=True)),
                ('season', models.CharField(blank=True, max_length=20)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('humidity', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('wind_speed', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('weather_conditions', models.CharField(blank=True, max_length=100)),
                ('observation_method', models.CharField(default='VISUAL', help_text='VISUAL, CAMERA, AUDIO', max_length=50)),
                ('observation_duration_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('chinese_egret_count', models.PositiveIntegerField(default=0)),
                ('great_egret_count', models.PositiveIntegerField(default=0)),
                ('intermediate_egret_count', models.PositiveIntegerField(default=0)),
                ('little_egret_count', models.PositiveIntegerField(default=0)),
                ('cattle_egret_count', models.PositiveIntegerField(default=0)),
                ('pacific_reef_heron_count', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('total_birds', models.PositiveIntegerField(default=0, help_text='Auto-calculated total')),
                ('data_quality', models.CharField(default='GOOD', help_text='GOOD, FAIR, POOR', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('observer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_records', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='census_records', to='analytics_new.siteanalytics')),
            ],
            options={
                'verbose_name': 'Census Record',
                'verbose_name_plural': 'Census Records',
                'ordering': ['-census_date', '-census_time'],
                'unique_together': {('site', 'census_date', 'census_time')},
            },
        ),
    ]
